{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-07T12:33:50.412Z",
    "end": "2024-10-07T12:34:47.130Z",
    "duration": 56718,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4c8f332b-8c61-45e6-a30c-47c63c0ca709",
      "title": "",
      "fullFile": "cypress/integration/ImportSerialDevices.feature",
      "file": "cypress/integration/ImportSerialDevices.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ce953c65-128e-4cc7-b0c0-2fffafcfd61c",
          "title": "ImportSerialDevices Page Functionality",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visiblity of ImportSerialDevices page and add ticket, download import and view the details",
              "fullTitle": "ImportSerialDevices Page Functionality Visiblity of ImportSerialDevices page and add ticket, download import and view the details",
              "timedOut": null,
              "duration": 4235,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "{\n  \"title\": \"cypress-mochawesome-reporter-screenshots\",\n  \"value\": [\n    [\n      \"/ImportSerialDevices.feature/ImportSerialDevices Page Functionality -- Visiblity of ImportSerialDevices page and add ticket, download import and view the details (failed).png\",\n      \"/ImportSerialDevices.feature/ImportSerialDevices Page Functionality -- Visiblity of ImportSerialDevices page and add ticket, download import and view the details -- after all hook (failed).png\"\n    ]\n  ]\n}",
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "CypressError: `cy.writeFile(\"cypress/cucumber-json/ImportSerialDevices.cucumber.json\")` timed out after waiting `4000ms`.\n\nhttps://on.cypress.io/writefile\n\nBecause this error occurred during a `after all` hook we are skipping the remaining tests in the current suite: `ImportSerialDevices Page Fu...`",
                "estack": "CypressError: `cy.writeFile(\"cypress/cucumber-json/ImportSerialDevices.cucumber.json\")` timed out after waiting `4000ms`.\n\nhttps://on.cypress.io/writefile\n\nBecause this error occurred during a `after all` hook we are skipping the remaining tests in the current suite: `ImportSerialDevices Page Fu...`\n    at <unknown> (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:120516:79)\n    at tryCatcher (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://dream-frontend-qa.onrender.com/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at writeCucumberJsonFile (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:85:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:170:0)",
                "diff": null
              },
              "uuid": "2342537c-fba4-4124-925e-59093f678d92",
              "parentUUID": "ce953c65-128e-4cc7-b0c0-2fffafcfd61c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2342537c-fba4-4124-925e-59093f678d92"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "Report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report/.jsons",
        "saveHtml": true,
        "reportPageTitle": "Legrande Cypress",
        "reportFilename": "Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}